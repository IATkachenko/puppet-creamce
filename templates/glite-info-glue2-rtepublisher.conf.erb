
# This is the configuration file for the GlueService information provider
# for the RTE publishers (a gridFTP server used to publish RunTimeEnvironment
# tags)

# Now extended for GLUE 2 attributes

# Many of the entries are commands which will be executed
# using backquotes in perl. They should write to stdout - the return
# code is not relevant except for init and status.

# The init command allows any setup command to be executed
# A non-zero return code will abort the provider
# Environment variables can be set by writing to stdout (x=y)

init = glite-info-service-rtepublisher init

# The service type should follow the official list in
# http://glueschema.forge.cnaf.infn.it/V12/ServiceType

#service_type = org.glite.RTEPublisher

# Use a different type since this will be done a bit differently
# for GLUE 2. However for now keep rtepublisher for the template and helper
# script names.

service_type = org.glite.ce.ApplicationPublisher

# This should be a command which returns the service interface version
# in the format 3[.2[.1]] - just hardwire to 1.0.0 here

get_version = echo "1.0.0"

# A command to return the service endpoint to stdout (uses variables set
# in the init script)

get_endpoint = echo gsiftp://<%=@gridftp_host-%>:<%=@gridftp_port-%><%=@gridft_pub_dir-%>

# A command to check the status of the service. The status message should be
# returned to stdout - it can be multi-line, the output will be massaged
# and truncated if necessary. 
# The return code should indicate the status:
# 0 = OK, 1 = Critical, 2 = Warning, 3 = Unknown, other = Other

get_status = glite-info-service-test RTEPUBLISHER && systemctl show globus-gridftp-server -p SubState | cut -d = -f 2-

# The URL of a WSDL document describing the service
# If the string does not start with "http" this will be omitted

WSDL_URL = nohttp://not.a.web.service/

# A URL to a web page defining the service semantics, e.g. a manual
# If the string does not start with "http" this will be omitted

semantics_URL = http://grid-deployment.web.cern.ch/grid-deployment/eis/docs/ExpSwInstall/sw-install.html

# StartTime: A command to return the service start time.
# This should be a unix timestamp, the info provider converts it to ISO8601

get_starttime = date -d "`systemctl show globus-gridftp-server -p ActiveEnterTimestamp | cut -d \" \" -f 2-`" +%s

# Owner: this should return a list of owner VO names, one per line
# Null entries will be omitted

get_owner = echo -e "<%=@voenv.keys().join('\n')%>"

# A list of AccessControlBaseRule strings to indicate who is allowed to
# have access to the service - at the simplest this is the same as the
# Owner but with the VO names prefixed by "VO:"

<% acbr='' -%>
<% @voenv.each do | vo, value | -%>
<% acbr=acbr+'VO:'+vo+'\n' -%>
<% end-%>

get_acbr = echo -e "<%=acbr%>"

# ServiceData entries if any, as a list of key=value pairs
# This will normally call a separate script

get_data = glite-info-service-rtepublisher executionenvironments

# New GLUE 2 attributes start here

# Capabilities are not very well-defined yet!
# There doesn't seem to be any match in the existing list for information
# publication, so let's invent one

get_capabilities = echo information.publication

# These three identify the specific implementation as opposed to the generic
# protocol. NB this version is single-valued.

get_implementor = echo gLite

get_implementationname = echo ApplicationPublisher

get_implementationversion = echo "1.0.0"

# The Quality Level for this endpoint: 1 = development, 2 = testing,
# 3 = pre-production and 4 = production
# No mechanism yet to set this

get_qualitylevel = echo 4

# The ServingState for this Endpoint: 1 = closed, 2 = draining,
# 3 = queueing, 4 = production (NB "production" has a different meaning
# here to the QualityLevel)
# Just hardwired for now

get_servingstate = echo 4
